<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qingfeng.system.dao.MenuDao">

	<!--数据权限-->
	<sql id="authPageSql">
		<!-- 数据权限 -->
		<if test="(pd.auth_organize_ids == null or pd.auth_organize_ids.size == 0) and (pd.auth_user != null and pd.auth_user != '')">
			and a.create_user=#{pd.auth_user}
		</if>
		<if test="pd.auth_organize_ids != null and pd.auth_organize_ids.size > 0">
			and (a.create_user=#{pd.auth_user} or a.create_organize in
			<foreach collection="pd.auth_organize_ids" item="organize_id" open="(" separator="," close=")">
				#{organize_id}
			</foreach>
			)
		</if>
	</sql>
	<sql id="authPdSql">
		<!-- 数据权限 -->
		<if test="(auth_organize_ids == null or auth_organize_ids.size == 0) and (auth_user != null and auth_user != '')">
			and a.create_user=#{auth_user}
		</if>
		<if test="auth_organize_ids != null and auth_organize_ids.size > 0">
			and (a.create_user=#{auth_user} or a.create_organize in
			<foreach collection="auth_organize_ids" item="organize_id" open="(" separator="," close=")">
				#{organize_id}
			</foreach>
			)
		</if>
	</sql>


	<!--查询分页列表-->
	<select id="findListPage" parameterType="com.qingfeng.util.Page" resultType="com.qingfeng.util.PageData">
		select
			a.id as "id",
			a.type as "type",
			a.name as "name",
			a.path as "path",
			a.redirect as "redirect",
			a.component as "component",
			a.title as "title",
			a.type as "type",
			a.keepAlive as "keepAlive",
			a.icon as "icon",
			a.permission as "permission",
			a.menu_cascade as "menu_cascade",
			a.parent_id as "parent_id",
			a.status as "status",
			a.level_num as "level_num",
			a.order_by as "order_by",
			a.remark as "remark",
			a.create_time as "create_time",
			a.create_user as "create_user",
			a.create_organize as "create_organize",
			a.update_user as "update_user",
			a.update_time as "update_time"
			from system_menu a
			where 1=1
			<if test="pd.name != null and pd.name != ''">
				and a.name like concat('%',concat(#{pd.name},'%'))
			</if>
			<if test="pd.code != null and pd.code != ''">
				and a.code like concat('%',concat(#{pd.code},'%'))
			</if>
			<if test="pd.menu_cascade != null and pd.menu_cascade != ''">
				and a.menu_cascade like concat('%',concat(#{pd.menu_cascade},'%'))
			</if>
			<if test="pd.parent_id != null and pd.parent_id != ''">
				and a.parent_id = #{pd.parent_id}
			</if>
			<if test="pd.status != null and pd.status != ''">
				and a.status = #{pd.status}
			</if>
			<if test="pd.type != null and pd.type != ''">
				and a.type = #{pd.type}
			</if>
			<include refid="authPageSql"></include>
			order by a.order_by+0 asc , a.create_time desc
	</select>

    <!--查询分页数量-->
    <select id="findListSize" parameterType="com.qingfeng.util.Page" resultType="Integer">
        select
        count(*)
        from system_menu a
        where 1=1
		<if test="pd.name != null and pd.name != ''">
			and a.name like concat('%',concat(#{pd.name},'%'))
		</if>
		<if test="pd.code != null and pd.code != ''">
			and a.code like concat('%',concat(#{pd.code},'%'))
		</if>
		<if test="pd.menu_cascade != null and pd.menu_cascade != ''">
			and a.menu_cascade like concat('%',concat(#{pd.menu_cascade},'%'))
		</if>
		<if test="pd.parent_id != null and pd.parent_id != ''">
			and a.parent_id = #{pd.parent_id}
		</if>
		<if test="pd.status != null and pd.status != ''">
			and a.status = #{pd.status}
		</if>
		<if test="pd.type != null and pd.type != ''">
			and a.type = #{pd.type}
		</if>
		<include refid="authPageSql"></include>
    </select>

    <!--查询列表-->
    <select id="findList" parameterType="com.qingfeng.util.PageData" resultType="com.qingfeng.util.PageData">
		select
			a.id as "id",
			a.type as "type",
			a.name as "name",
			a.path as "path",
			a.redirect as "redirect",
			a.component as "component",
			a.title as "title",
			a.type as "type",
			a.keepAlive as "keepAlive",
			a.icon as "qf_icon",
			a.permission as "permission",
			a.menu_cascade as "menu_cascade",
			a.parent_id as "parent_id",
			a.status as "status",
			a.level_num as "level_num",
			a.order_by as "order_by",
			a.remark as "remark",
			a.create_time as "create_time",
			a.create_user as "create_user",
			a.create_organize as "create_organize",
			a.update_user as "update_user",
			a.update_time as "update_time",
			ifnull(b.num,0) as "child_num",
			c.role_ids as "role_ids"
			from system_menu a
			left join (
				select
				count(*) as "num",
				a.parent_id as "parent_id"
				from system_menu a
				where 1=1
				<if test="typeList != null and typeList.size > 0">
					and a.type in
					<foreach collection="typeList" item="type" open="(" separator="," close=")">
						#{type}
					</foreach>
				</if>
				group by a.parent_id
			) b on a.id=b.parent_id
			left join (
				select
				GROUP_CONCAT(a.role_id) as "role_ids",
				a.menu_id as "menu_id"
				from system_role_menu a
				group by a.menu_id
			) c on a.id=c.menu_id
			where 1=1
			<if test="name != null and name != ''">
				and a.name like concat('%',concat(#{name},'%'))
			</if>
			<if test="code != null and code != ''">
				and a.code like concat('%',concat(#{code},'%'))
			</if>
			<if test="menu_cascade != null and menu_cascade != ''">
				and a.menu_cascade like concat('%',concat(#{menu_cascade},'%'))
			</if>
			<if test="parent_id != null and parent_id != ''">
				and a.parent_id = #{parent_id}
			</if>
			<if test="status != null and status != ''">
				and a.status = #{status}
			</if>
			<if test="type != null and type != ''">
				and a.type = #{type}
			</if>
			<if test="typeList != null and typeList.size > 0">
				and a.type in
				<foreach collection="typeList" item="type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
			<include refid="authPdSql"></include>
			order by a.order_by+0 asc , a.create_time desc
    </select>
	
	<!--查询详情-->
	<select id="findInfo" parameterType="com.qingfeng.util.PageData" resultType="com.qingfeng.util.PageData">
		select
			a.id as "id",
			a.type as "type",
			a.name as "name",
			a.path as "path",
			a.redirect as "redirect",
			a.component as "component",
			a.title as "title",
			a.type as "type",
			a.keepAlive as "keepAlive",
			a.icon as "icon",
			a.permission as "permission",
			a.menu_cascade as "menu_cascade",
			a.parent_id as "parent_id",
			a.status as "status",
			a.level_num as "level_num",
			a.order_by as "order_by",
			a.remark as "remark",
			a.create_time as "create_time",
			a.create_user as "create_user",
			a.create_organize as "create_organize",
			a.update_user as "update_user",
			a.update_time as "update_time",
			ifnull(b.num,0) as "child_num"
			from system_menu a
			left join (
				select
				count(*) as "num",
				a.parent_id as "parent_id"
				from system_menu a
				group by a.parent_id
			) b on a.id=b.parent_id
			where a.id=#{id}
	</select>

	<!--保存-->
	<insert id="save" parameterType="com.qingfeng.util.PageData">
		insert into system_menu (id,type,name,path,redirect,component,title,keepAlive,icon,permission,menu_cascade,parent_id,status,level_num,order_by,remark,create_time,create_user,create_organize,update_user,update_time)
			values
			(#{id},#{type,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{path,jdbcType=VARCHAR},#{redirect,jdbcType=VARCHAR},#{component,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR},#{keepAlive,jdbcType=VARCHAR},#{icon,jdbcType=VARCHAR},#{permission,jdbcType=VARCHAR},#{menu_cascade,jdbcType=VARCHAR},#{parent_id,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR},#{level_num,jdbcType=VARCHAR},#{order_by,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},#{create_time,jdbcType=VARCHAR},#{create_user,jdbcType=VARCHAR},#{create_organize,jdbcType=VARCHAR},#{update_user,jdbcType=VARCHAR},#{update_time,jdbcType=VARCHAR})
	</insert>

	<!--更新-->
	<update id="update" parameterType="com.qingfeng.util.PageData">
		update system_menu set
			<if test="type != null">type=#{type},</if>
			<if test="name != null">name=#{name},</if>
			<if test="path != null">path=#{path},</if>
			<if test="redirect != null">redirect=#{redirect},</if>
			<if test="component != null">component=#{component},</if>
			<if test="title != null">title=#{title},</if>
			<if test="keepAlive != null">keepAlive=#{keepAlive},</if>
			<if test="icon != null">icon=#{icon},</if>
			<if test="permission != null">permission=#{permission},</if>
			<if test="menu_cascade != null">menu_cascade=#{menu_cascade},</if>
			<if test="parent_id != null">parent_id=#{parent_id},</if>
			<if test="status != null">status=#{status},</if>
			<if test="level_num != null">level_num=#{level_num},</if>
			<if test="order_by != null">order_by=#{order_by},</if>
			<if test="remark != null">remark=#{remark},</if>
			<if test="update_user != null">update_user=#{update_user},</if>
			update_time=#{update_time}
			where id=#{id}
	</update>
	
    <!--删除-->
	<delete id="del" parameterType="String">
		delete from system_menu where id in (
			select a.id from (
			<foreach collection="array" item="id" open="(" separator="union all" close=")">select id from system_menu
				where menu_cascade like
				concat('%',concat((select a.menu_cascade from (select id,menu_cascade from system_menu) a where a.id
				in (
				#{id}
				) ),'%'))
			</foreach>
			) a
		)

	</delete>

	<!--根据类型和父级id删除-->
	<delete id="delForParam" parameterType="com.qingfeng.util.PageData">
		delete from system_menu where type=#{type} and parent_id=#{parent_id}
	</delete>

	<!--查询功能权限-->
	<select id="findAuthMenuList" parameterType="com.qingfeng.util.PageData" resultType="com.qingfeng.util.PageData">
		select
			a.id as "id",
			a.type as "type",
			a.name as "name",
			a.permission as "permission",
			b.name as "parent_name",
			b.permission as "parent_permission"
			from system_menu a
			left join system_menu b on a.parent_id=b.id
			left join system_role_menu c on a.id=c.menu_id
			where a.type='2'
			<if test="user_id != null and user_id != ''">
				and (
					c.role_id in (
					select role_id from system_user_role where user_id = #{user_id,jdbcType=VARCHAR}
					) or c.role_id in (
					select role_id from system_organize_role where organize_id in (select organize_id from system_user_organize where user_id = #{user_id,jdbcType=VARCHAR})
					)
				)
			</if>
			order by a.order_by+0 asc, a.create_time desc
	</select>


</mapper>